---
title: "Exploring non-linear models for viral load dynamics"
author: "Phrutsamon Wongnak"
format: html
editor: visual
date-modified: last-modified
bibliography: MORU_PLATCOV.bib
toc: true
editor_options: 
  chunk_output_type: inline
---

```{r preambule}
#| echo: false 
#| cache: true 
knitr::opts_chunk$set(cache = T, cache.comments = FALSE,
                      echo= T, include = TRUE,dev = "pdf")
```

```{r settings}
#| echo: false 
#| warning: false 

library(ggplot2)
library(ggpubr)

```

## Document descriptions

This document aims explore alternative non-linear model(s) for viral load dynamics from tonsil swab data. Models explored in this documents include:

1.  Log-linear decay model

2.  Bi-exponential decay model

3.  Up-and-down model

4.  Two-compartment kinetics model

This analysis is a part of the PLATCOV project, and potentially the AD ASTRA project.

## Characteristics of viral loads dynamics

-   Dynamics of viral loads from tonsil swab samples can be divided into 2 phases:

    1.  Proliferation phase.

    2.  Clearance phase.

-   Patients are recruited into the study at different stage of infection, which could be either in the proliferation (increasing then decreasing) or clearance phases (monotonic decreasing).

-   In experimental drug arms, patients receive intervention drugs on the first enrollment day, therefore, viral loads dynamics get influenced upon the enrollment.

```{r Global model settings}
#| echo: false 
#| cache: true 
t <- seq(0,14,0.1)
```

## Model characteristics

### 1. Log-linear decay model

$$
f_{vl}(t)=A_{0}-\alpha t
$$ {#eq-loglinear}

```{r Model 1 Log-linear decay setting}
#| echo: false 
#| cache: true

#Defining functions
vl_cal_m1 <- function(A0, alpha, t){
  vl_t <- A0 - alpha * t
  out <- data.frame(A0, alpha, t, vl_t)
  return(out)
}

#Parameter lists
A0 <- c(4,6,8)
alpha <- c(0.25, 0.5, 1)

params <- expand.grid(A0 = A0, alpha = alpha)

#Default parameters
A0_def <- 6
alpha_def <- 0.5
```

```{r Model 1 Log-linear excecution}
#| echo: false 
#| cache: true 
output_M1 <- NULL
for(i in 1:nrow(params)){
  out <- vl_cal_m1(params$A0[i], params$alpha[i], t)
  output_M1 <- rbind(output_M1, out)
}

#Checking parameter conditions
A0_check <- output_M1$A0 == A0_def
alpha_check <- output_M1$alpha == alpha_def
```

```{r Model 1 Log-linear decay varying A0}
#| echo: false 
#| cache: true 
#| warning: false 
G1 <- ggplot(output_M1[alpha_check ,], 
             aes(x = t, y = vl_t, col = as.factor(A0))) + 
  geom_line(linewidth = 1) +
  theme_bw() +
  xlab("Time (days)") +
  ylab("Predicted log viral loads") +
  scale_color_manual(values = c("#EB455F", "black", "#2F58CD"), name = "A0") +
  ylim(0,8) +
  ggtitle("Varying A0") +
  theme(#legend.position = "bottom",
        axis.title = element_text(face = "bold", size = 12),
        plot.title = element_text(face = "bold", size = 15)) +
  scale_x_continuous(breaks = 0:14)
```

```{r Model 1 Log-linear decay varying alpha}
#| echo: false 
#| cache: true 
#| warning: false 
G2 <- ggplot(output_M1[A0_check ,], aes(x = t, y = vl_t, col = as.factor(alpha))) +
  geom_line(linewidth = 1) +
  theme_bw() +
  xlab("Time (days)") +
  ylab("Predicted log viral loads") +
  scale_color_manual(values = c("#EB455F", "black", "#2F58CD"), name = "alpha") +
  ylim(0,8) +
  ggtitle("Varying alpha") +
  theme(#legend.position = "bottom",
        axis.title = element_text(face = "bold", size = 12),
        plot.title = element_text(face = "bold", size = 15)) +
  scale_x_continuous(breaks = 0:14)
```

```{r Model 1 combined graphs}
#| echo: false 
#| cache: true 
#| warning: false 
#| fig-width: 8
#| fig-height: 3
#| height: auto
#| label: fig-loglinear
#| fig-cap: "Predicted viral load dynamics from Model 1: Log-linear decay model. Black lines represent viral load predictions using identical parameter set across all panels."
Mod1_combined <- ggarrange(G1, G2, ncol = 2, nrow = 1, align = "hv")
Mod1_combined

# Exporting
#pdf("Plots/Explore_non_linear.pdf", width = 8, height = 6)
#Mod1_combined
#dev.off()
```

### 2. Bi-exponential decay model

$$
f_{vl}(t)=\ln(e^{A_{0}-\alpha t}+e^{B_{0}-\beta t})
$$ {#eq-biexpo}

```{r Model 2 Biexponential decay setting}
#| echo: false 
#| cache: true

#Defining functions
vl_cal_m2 <- function(A0, alpha, B0, beta, t){
  vl_t <- log(exp(A0-(alpha*t)) + exp(B0-(beta*t)))
  out <- data.frame(A0, alpha, B0, beta, t, vl_t)
  return(out)
}

#Parameter lists
A0 <- c(4,6,8)
alpha <- c(0.25, 0.5, 1)
B0 <- c(2,4,6)
beta <- c(0.125, 0.25, 0.5)

params <- expand.grid(A0 = A0, alpha = alpha, B0 = B0, beta = beta)

#Default parameters
A0_def <- 6
alpha_def <- 0.5
B0_def <- 4
beta_def <- 0.25
```

```{r Model 2 Biexponential decay excecution}
#| echo: false 
#| cache: true 
output_M2 <- NULL
for(i in 1:nrow(params)){
  out <- vl_cal_m2(params$A0[i], params$alpha[i], params$B0[i], params$beta[i], t)
  output_M2 <- rbind(output_M2, out)
}

#Checking parameter conditions
A0_check <- output_M2$A0 == A0_def
alpha_check <- output_M2$alpha == alpha_def
B0_check <- output_M2$B0 == B0_def
beta_check <- output_M2$beta == beta_def
```

```{r Model 2 Biexponential decay varying A0}
#| echo: false 
#| cache: true 
#| warning: false 
G1 <- ggplot(output_M2[alpha_check & B0_check & beta_check ,], 
             aes(x = t, y = vl_t, col = as.factor(A0))) + 
  geom_line(linewidth = 1) +
  theme_bw() +
  xlab("Time (days)") +
  ylab("Predicted log viral loads") +
  scale_color_manual(values = c("#EB455F", "black", "#2F58CD"), name = "A0") +
  ylim(0,8) +
  ggtitle("Varying A0") +
  theme(#legend.position = "bottom",
        axis.title = element_text(face = "bold", size = 12),
        plot.title = element_text(face = "bold", size = 15)) +
  scale_x_continuous(breaks = 0:14)
```

```{r Model 2 Biexponential decay varying alpha}
#| echo: false 
#| cache: true 
#| warning: false 
G2 <- ggplot(output_M2[A0_check & B0_check & beta_check ,], 
             aes(x = t, y = vl_t, col = as.factor(alpha))) + 
  geom_line(linewidth = 1) +
  theme_bw() +
  xlab("Time (days)") +
  ylab("Predicted log viral loads") +
  scale_color_manual(values = c("#EB455F", "black", "#2F58CD"), name = "alpha") +
  ylim(0,8) +
  ggtitle("Varying alpha") +
  theme(#legend.position = "bottom",
        axis.title = element_text(face = "bold", size = 12),
        plot.title = element_text(face = "bold", size = 15)) +
  scale_x_continuous(breaks = 0:14)
```

```{r Model 2 Biexponential decay varying B0}
#| echo: false 
#| cache: true 
#| warning: false 
G3 <- ggplot(output_M2[A0_check & alpha_check & beta_check ,], 
             aes(x = t, y = vl_t, col = as.factor(B0))) + 
  geom_line(linewidth = 1) +
  theme_bw() +
  xlab("Time (days)") +
  ylab("Predicted log viral loads") +
  scale_color_manual(values = c("#EB455F", "black", "#2F58CD"), name = "B0") +
  ylim(0,8) +
  ggtitle("Varying B0") +
  theme(#legend.position = "bottom",
        axis.title = element_text(face = "bold", size = 12),
        plot.title = element_text(face = "bold", size = 15)) +
  scale_x_continuous(breaks = 0:14)
```

```{r Model 2 Biexponential decay varying beta}
#| echo: false 
#| cache: true 
#| warning: false 
G4 <- ggplot(output_M2[A0_check & alpha_check & B0_check ,], 
             aes(x = t, y = vl_t, col = as.factor(beta))) + 
  geom_line(linewidth = 1) +
  theme_bw() +
  xlab("Time (days)") +
  ylab("Predicted log viral loads") +
  scale_color_manual(values = c("#EB455F", "black", "#2F58CD"), name = "beta") +
  ylim(0,8) +
  ggtitle("Varying beta") +
  theme(#legend.position = "bottom",
        axis.title = element_text(face = "bold", size = 12),
        plot.title = element_text(face = "bold", size = 15)) +
  scale_x_continuous(breaks = 0:14)
```

```{r Model 2 Biexponential decay combined graphs}
#| echo: false 
#| cache: true 
#| warning: false 
#| fig-width: 8
#| fig-height: 5
#| height: auto
#| label: fig-biexpo
#| fig-cap: "Predicted viral load dynamics from Model 2: Bi-exponential model. Black lines represent viral load predictions using identical parameter set across all panels."
Mod2_combined <- ggarrange(G1, G2, G3, G4, ncol = 2, nrow = 2, align = "hv")
Mod2_combined

# Exporting
#pdf("Plots/Explore_non_linear.pdf", width = 8, height = 6)
#Mod1_combined
#dev.off()
```

### 3. Up-and-down model

This section explores the original non-linear model used in our previous analyses, as described in @watson_characterizing_2022, see @eq-updown. $$
f_{vl}(t)=A_{0} + \ln\left(\frac{x+y}{ye^{-x(t-t_{max})}+xe^{t-t_{max}}}\right) 
$$ {#eq-updown} This model describes viral load dynamics by fixing the maximum viral loads of $A_{0}$ of time $t=t_{max}$. While the parameters $x$ and $y$ control the rates of increasing viral loads before $t_{max}$ and decreasing viral loads after $t_{max}$, respectively (see @fig-updown).

```{r Model 3 setting}
#| echo: false 
#| cache: true 

#Defining functions
vl_cal_m1 <- function(A0, x, y, tmax, t){
  vl_t <- A0 + log((x+y)/((y*exp(-x*(t-tmax))) + (x*exp(y*(t-tmax)))))
  out <- data.frame(A0, x, y, tmax, t, vl_t)
  return(out)
}

#Parameter lists
A0 <- c(4,6,8)
x <- c(0.25, 0.5, 1)
y <- c(0.1, 0.2, 0.4)
tmax <- c(0,2,4)

params <- expand.grid(A0 = A0, x = x, y = y, tmax = tmax)

#Default parameters
A0_def <- 6
x_def <- 0.5
y_def <- 0.2
tmax_def <- 2
```

```{r Model 3 excecution}
#| echo: false 
#| cache: true 
output_M1 <- NULL
for(i in 1:nrow(params)){
  out <- vl_cal_m1(params$A0[i], params$x[i], params$y[i], params$tmax[i], t)
  output_M1 <- rbind(output_M1, out)
}

#Checking parameter conditions
A0_check <- output_M1$A0 == A0_def
x_check <- output_M1$x == x_def
y_check <- output_M1$y == y_def
tmax_check <- output_M1$tmax == tmax_def
```

```{r Model 3 Varying A0}
#| echo: false 
#| cache: true 
dataA0 <- output_M1[(x_check & y_check & tmax_check) ,]
G1 <- ggplot(dataA0, aes(x = t, y = vl_t, col = as.factor(A0))) + 
  geom_line(linewidth = 1) +
  theme_bw() +
  xlab("Time (days)") +
  ylab("Predicted log viral loads") +
  scale_color_manual(values = c("#EB455F", "black", "#2F58CD"), name = "A0") +
  ylim(0,8) +
  ggtitle("Varying A0") +
  theme(#legend.position = "bottom",
        axis.title = element_text(face = "bold", size = 12),
        plot.title = element_text(face = "bold", size = 15)) +
  scale_x_continuous(breaks = 0:14)
```

```{r Model 3 varying x}
#| echo: false 
#| cache: true 
datax <- output_M1[(A0_check & y_check & tmax_check) ,]

G2 <-ggplot(datax, aes(x = t, y = vl_t, col = as.factor(x))) + 
  geom_line(linewidth = 1) +
  theme_bw() +
  xlab("Time (days)") +
  ylab("Predicted log viral loads") +
  scale_color_manual(values = c("#EB455F", "black", "#2F58CD"), name = "x") +
  ylim(0,8) +
  ggtitle("Varying x") +
  theme(#legend.position = "bottom",
        axis.title = element_text(face = "bold", size = 12),
        plot.title = element_text(face = "bold", size = 15)) +
  scale_x_continuous(breaks = 0:14)
```

```{r Model 3 varying y}
#| echo: false 
#| cache: true 
datay <- output_M1[(A0_check & x_check & tmax_check) ,]

G3 <- ggplot(datay, aes(x = t, y = vl_t, col = as.factor(y))) + 
  geom_line(linewidth = 1) +
  theme_bw() +
  xlab("Time (days)") +
  ylab("Predicted log viral loads") +
  scale_color_manual(values = c("#EB455F", "black", "#2F58CD"), name = "y") +
  ylim(0,8) +
  ggtitle("Varying y") +
  theme(#legend.position = "bottom",
        axis.title = element_text(face = "bold", size = 12),
        plot.title = element_text(face = "bold", size = 15)) +
  scale_x_continuous(breaks = 0:14)
```

```{r Model 3 varying tmax}
#| echo: false 
#| cache: true 
datatmax <- output_M1[(A0_check & x_check & y_check) ,]

G4 <- ggplot(datatmax, aes(x = t, y = vl_t, col = as.factor(tmax))) + 
  geom_line(linewidth = 1) +
  theme_bw() +
  xlab("Time (days)") +
  ylab("Predicted log viral loads") +
  scale_color_manual(values = c("#EB455F", "black", "#2F58CD"), name = "tmax") +
  ylim(0,8) +
  ggtitle("Varying tmax") +
  theme(#legend.position = "bottom",
        axis.title = element_text(face = "bold", size = 12),
        plot.title = element_text(face = "bold", size = 15)) +
  scale_x_continuous(breaks = 0:14)
```

```{r Model 3 combined graphs}
#| echo: false 
#| cache: true 
#| fig-width: 8
#| fig-height: 5
#| height: auto
#| label: fig-updown
#| fig-cap: "Predicted viral load dynamics from Model 3: Up-and-down model. Black lines represent viral load predictions using identical parameter set across all panels."
Mod3_combined <- ggarrange(G1, G2, G3, G4, ncol = 2, nrow = 2, align = "hv")
Mod3_combined

# Exporting
#pdf("Plots/Explore_non_linear.pdf", width = 8, height = 6)
#Mod1_combined
#dev.off()
```

#### Remarks on Model 1: Original non-linear model

-   The model is quite rigid, suggested from varying the parameters. The declining phase looks almost linear in all scenarios.

-   The rate controlling parameters ($x$ and $y$) do not have a plausible biological interpretation.

-   $A_{0}$ and $t_{max}$ are sensitive to the infectious time points and the moment of recruitment.

### 4. Two-compartment kinetics model

xxx

$$
\frac{dB(t)}{dt}=\lambda_{1}A(t)-\lambda_{2}B(t)
$$ {#eq-2}

xxx

$$
B(t)=\left( \frac{\lambda_{1}}{\lambda_{2}-\lambda_{1}}\right)A_{0}\left(e^{-\lambda_{1}t}-e^{-\lambda_{2}t}\right)+B_{0}e^{-\lambda_{2}t}
$$

xx

$$
\ln\left(B(t)\right)= \ln \left( \left( \frac{\lambda_{1}}{\lambda_{2}-\lambda_{1}}\right)e^{\ln A_{0}}\left(e^{-\lambda_{1}t}-e^{-\lambda_{2}t}\right)+ e^{\ln B_{0}}e^{-\lambda_{2}t}\right)
$$

```{r Model 4 Two-compartment kinetics setting}
#| echo: false 
#| cache: true

#Defining functions
vl_cal_m4 <- function(A0, B0, lambda1, lambda2, t){
  vl_t <- log(  ((lambda1/(lambda2-lambda1)) * exp(A0) * (exp(-lambda1 * t) - exp(-lambda2 * t))) + (exp(B0) * (exp(-lambda2 * t))))
  out <- data.frame(A0, B0, lambda1, lambda2, t, vl_t)
  return(out)
}

#Parameter lists
A0 <- c(4,6,8)
B0 <- c(4, 6, 8)
lambda2 <- 5*c(0.1, 0.2, 0.4)
lambda1 <- 3*c(0.15, 0.3, 0.6)

params <- expand.grid(A0 = A0, B0 = B0, lambda1 = lambda1, lambda2 = lambda2)

#Default parameters
A0_def <- 6
B0_def <- 6
lambda1_def <- 3*0.3
lambda2_def <- 5*0.2
```

```{r Model  4 Two-compartment kinetics excecution}
#| echo: false 
#| cache: true 
output_M4 <- NULL
for(i in 1:nrow(params)){
  out <- vl_cal_m4(params$A0[i], params$B0[i], params$lambda1[i], params$lambda2[i], t)
  output_M4 <- rbind(output_M4, out)
}

#Checking parameter conditions
A0_check <- output_M4$A0 == A0_def
B0_check <- output_M4$B0 == B0_def
lambda1_check <- output_M4$lambda1 == lambda1_def
lambda2_check <- output_M4$lambda2 == lambda2_def
```

```{r Model 4 Two-compartment kinetics varying A0}
#| echo: false 
#| cache: true 
#| warning: false 
G1 <- ggplot(output_M4[B0_check & lambda1_check & lambda2_check ,], 
             aes(x = t, y = vl_t, col = as.factor(A0))) + 
  geom_line(linewidth = 1) +
  theme_bw() +
  xlab("Time (days)") +
  ylab("Predicted log viral loads") +
  scale_color_manual(values = c("#EB455F", "black", "#2F58CD"), name = "log10 A0") +
  ylim(0,8) +
  ggtitle("Varying A0") +
  theme(#legend.position = "bottom",
        axis.title = element_text(face = "bold", size = 12),
        plot.title = element_text(face = "bold", size = 15)) +
  scale_x_continuous(breaks = 0:14)
```

```{r Model 4 Two-compartment kinetics varying B0}
#| echo: false 
#| cache: true 
#| warning: false 
G2 <- ggplot(output_M4[A0_check & lambda1_check & lambda2_check ,], 
             aes(x = t, y = vl_t, col = as.factor(B0))) + 
  geom_line(linewidth = 1) +
  theme_bw() +
  xlab("Time (days)") +
  ylab("Predicted log viral loads") +
  scale_color_manual(values = c("#EB455F", "black", "#2F58CD"), name = "log10 B0") +
  ylim(0,8) +
  ggtitle("Varying B0") +
  theme(#legend.position = "bottom",
        axis.title = element_text(face = "bold", size = 12),
        plot.title = element_text(face = "bold", size = 15)) +
  scale_x_continuous(breaks = 0:14)
```

```{r Model 4 Two-compartment kinetics varying lambda1}
#| echo: false 
#| cache: true 
#| warning: false 
G3 <- ggplot(output_M4[A0_check & B0_check & lambda2_check ,], 
             aes(x = t, y = vl_t, col = as.factor(lambda1))) + 
  geom_line(linewidth = 1) +
  theme_bw() +
  xlab("Time (days)") +
  ylab("Predicted log viral loads") +
  scale_color_manual(values = c("#EB455F", "black", "#2F58CD"), name = "lambda1") +
  ylim(0,8) +
  ggtitle("Varying lambda1") +
  theme(#legend.position = "bottom",
        axis.title = element_text(face = "bold", size = 12),
        plot.title = element_text(face = "bold", size = 15)) +
  scale_x_continuous(breaks = 0:14)
```

```{r Model 4 Two-compartment kinetics varying lambda2}
#| echo: false 
#| cache: true 
#| warning: false 
G4 <- ggplot(output_M4[A0_check & B0_check & lambda1_check ,], 
             aes(x = t, y = vl_t, col = as.factor(lambda2))) + 
  geom_line(linewidth = 1) +
  theme_bw() +
  xlab("Time (days)") +
  ylab("Predicted log viral loads") +
  scale_color_manual(values = c("#EB455F", "black", "#2F58CD"), name = "lambda2") +
  ylim(0,8) +
  ggtitle("Varying lambda2") +
  theme(#legend.position = "bottom",
        axis.title = element_text(face = "bold", size = 12),
        plot.title = element_text(face = "bold", size = 15)) +
  scale_x_continuous(breaks = 0:14)
```

```{r Model 4 combined graphs}
#| echo: false 
#| cache: true 
#| fig-width: 8
#| fig-height: 5
#| height: auto
#| label: fig-twocmpt2
#| fig-cap: "Predicted viral load dynamics from Model 4: two-comparment kinetics model. Black lines represent viral load predictions using identical parameter set across all panels."
Mod4_combined2 <- ggarrange(G1, G2, G3, G4, ncol = 2, nrow = 2, align = "hv")
print(Mod4_combined2)

# Exporting
#pdf("Plots/Explore_non_linear.pdf", width = 8, height = 6)
#Mod1_combined
#dev.off()
```
